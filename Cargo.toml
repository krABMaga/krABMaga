[package]
name = "rust-ab"
version = "1.0.0"
authors = [
    "Carmine Spagnuolo <spagnuolocarmine@gmail.com>", 
    "Alessia Antelmi <aantelmi@unisa.it>", 
    "Matteo D'Auria <matdauria@unisa.it>", 
    "Daniele De Vinco <danieledevinco1996@gmail.com", 
    "Francesco Foglia <frafonia@gmail.com>", 
    "Pasquale Caramante <pasqcaramante@gmail.com>", 
    "Luca Postiglione <lucapostiglione10@gmail.com>", 
    "Giuseppe D'Ambrosio <giuseppe.dambrosio14@gmail.com>"
]
edition = "2021"
license = "MIT"
keywords = ["discrete", "simulation", "agent based model", "agent based simulation"]
categories = ["science", "simulation", "agent based model"]
readme = "README.md"
homepage = "https://github.com/spagnuolocarmine/rust-ab"
repository = "https://github.com/spagnuolocarmine/rust-ab"

[dependencies]
hashbrown = "0.*"
priority-queue = "1.*"
rand = "0.*"
lazy_static = "1.*"
cfg-if = "1.*"
num_cpus = "1.*"
rayon="1.5.1"
clap="2.*"
ahash="0.*"
dyn-clone="1.*"
downcast-rs = "1.*"
csv = "1.*"
indicatif = "0.*"
crossbeam = "0.*"
rand_pcg = "0.*"


# Model exploration AWS features
lambda_runtime = {version = "0.4", optional = true}
serde = { version = "1.*", features = ["derive"], optional = true}
serde_json = {version = "1.*", optional = true}
tokio = { version = "1.*", features = ["full"], optional = true }
aws-config = {version = "0.4", optional = true}
aws-sdk-sqs = {version = "0.4", optional = true}
aws-sdk-lambda = {version = "0.4", optional = true}
futures = {version = "0.3", optional = true}

# Model exploration MPI features
# rsmpi points to a specific commit
#mpi = { git = "https://github.com/bsteinb/rsmpi", rev = "f9aec8b8d82", optional = true }
mpi = { git = "https://github.com/bsteinb/rsmpi", optional = true }
memoffset = { version = "0.6.4", optional = true}

# Bayesian
friedrich = { version = "0.4.1", optional = true }
statrs = { version = "0.15.0", optional = true } 
argmin = { version = "0.5.0", optional = true }
finitediff = { version = "0.*", optional = true }

# Visualization features
bevy_prototype_lyon = {version="0.4.0", optional=true}
image = {version="0.*",optional=true}
bevy_egui = {version="0.10",optional=true}
[dependencies.bevy]
version= "0.6"
default-features = false
optional=true

[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = {version="0.*", features=["wasm-bindgen"]}

# Must be kept separate and asked to the user due to missing support for conditional compilation of features
# https://github.com/rust-lang/cargo/issues/7914
[features]
distributed_mpi = [
    "mpi",
    "memoffset"
]
aws = [
    "lambda_runtime",
    "serde",
    "serde_json",
    "tokio",
    "aws-config",
    "aws-sdk-sqs",
    "aws-sdk-lambda",
    "futures",
]
bayesian = [
    "friedrich",
    "statrs", 
    "argmin",
    "finitediff"
]

parallel = []

visualization = [
    "bevy_prototype_lyon",
    "bevy",
    "bevy/bevy_winit",
    "bevy/render",
    "bevy/bevy_gltf",
    "bevy/png",
    "image",
    "bevy_egui"
]
visualization_wasm = [
    "bevy_prototype_lyon",
    "bevy",
    "bevy/bevy_winit",
    "bevy/render",
    "bevy/bevy_gltf",
    "bevy/png",
    "image",
    "bevy_egui",
]

[lib]
doctest = false